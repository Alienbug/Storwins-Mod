<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wxS9p75amk+ohwuUq/Kfor3lYeiCKfpwDaiioELBtrRg6mGK3lNfLc0n1MMFylX5T9Hefn76FWr4aAoq
        FGxLC6Yepug99dXSfEI9PID2loehC46moELBtrRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug9
        9dXSfEI9PID2loehC46moELBtrRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXSfEI9PID2
        loehC46moELBtrRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXSfEI9PID2loehC46moELB
        trRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXSfEI9PID2loehC46moELBtrRg6mGK3lNf
        Lc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXSfEI9PID2loehC46moELBtrRg6mGK3lNfLc0n1MMDaG95
        GLrgaAoqFGxLC6Yepug99dXSfEI9PID2loehC46moELBtrRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxL
        C6Yepug99dXSfEI9PID2loehC46moELBtrRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXS
        fEI9PID2loehC46moELBtrRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXSfEI9PID2loeh
        C46moELBtrRg6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXSfEI9PID2loehC46moELBtrRg
        6mGK3lNfLc0n1MMDaG95GLrgaAoqFGxLC6Yepug99dXSfEI9PID2loehC0b86vPdLyjA1u8+PyAF2/rP
        zz9/QT1M0Xvqq6X5hHpoKVflP0h7y8PQBSP04RpQS0GFgm1pwdTDFL2nvlqaT6iHlnJV/oO0tzwMXTBC
        H64BtRRUKNiWFkw9TNF76qul+YR6aClX5T9Ie8vD0AUj9OEaUEtBhYJtacHUwxS9p75amk+oh5ZyVf6D
        tLc8DF0wQh+uAbUUVCjYlhZMPUzRe+qrpfmEemgpV+U/SHvLw9AFI377+f4XNPzXsyhX5T9Ie8vD0AUj
        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
        s7/a2c93/hf/tbhq8Hwk+AAAAABJRU5ErkJggg==
</value>
  </data>
</root>